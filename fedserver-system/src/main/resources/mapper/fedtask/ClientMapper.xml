<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fedserver.fedtask.mapper.ClientMapper">
    
    <resultMap type="Client" id="ClientResult">
        <result property="clientId"    column="client_id"    />
        <result property="clientName"    column="client_name"    />
        <result property="loginName"    column="login_name"    />
        <result property="password"    column="password"    />
        <result property="salt"    column="salt"    />
        <result property="email"    column="email"    />
        <result property="phonenumber"    column="phonenumber"    />
        <result property="status"    column="status"    />
        <result property="avator"    column="avator"    />
        <result property="sex"    column="sex"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="remark"    column="remark"    />
        <result property="creatTime"    column="creat_time"    />
        <result property="creatBy"    column="creat_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
    </resultMap>

    <resultMap id="ClientClientLogResult" type="Client" extends="ClientResult">
        <collection property="clientLogList" notNullColumn="cl_id" javaType="java.util.List" resultMap="ClientLogResult" />
    </resultMap>

    <resultMap type="ClientLog" id="ClientLogResult">
        <result property="clId"    column="cl_id"    />
        <result property="clientId"    column="client_id"    />
        <result property="tpId"    column="tp_id"    />
        <result property="flag"    column="flag"    />
        <result property="device"    column="device"    />
        <result property="localIter"    column="local_iter"    />
        <result property="modelEvaluate"    column="model_evaluate"    />
        <result property="startTime"    column="start_time"    />
        <result property="endTime"    column="end_time"    />
    </resultMap>

    <sql id="selectClientVo">
        select client_id, client_name, login_name, password, salt, email, phonenumber, status, avator, sex, del_flag, remark, creat_time, creat_by, update_time, update_by from client
    </sql>

    <select id="selectClientList" parameterType="Client" resultMap="ClientResult">
        <include refid="selectClientVo"/>
        <where>  
            <if test="clientName != null  and clientName != ''"> and client_name like concat('%', #{clientName}, '%')</if>
            <if test="loginName != null  and loginName != ''"> and login_name like concat('%', #{loginName}, '%')</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
            <if test="phonenumber != null  and phonenumber != ''"> and phonenumber = #{phonenumber}</if>
            <if test="sex != null  and sex != ''"> and sex = #{sex}</if>
        </where>
    </select>
    
    <select id="selectClientById" parameterType="Long" resultMap="ClientClientLogResult">
        select a.client_id, a.client_name, a.login_name, a.password, a.salt, a.email, a.phonenumber, a.status, a.avator, a.sex, a.del_flag, a.remark, a.creat_time, a.creat_by, a.update_time, a.update_by,
            b.cl_id, b.client_id, b.tp_id, b.flag, b.device, b.local_iter, b.model_evaluate, b.start_time, b.end_time
        from client a
        left join client_log b on b.client_id = a.client_id
        where a.client_id = #{clientId}
    </select>
        
    <insert id="insertClient" parameterType="Client" useGeneratedKeys="true" keyProperty="clientId">
        insert into client
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="clientName != null">client_name,</if>
            <if test="loginName != null and loginName != ''">login_name,</if>
            <if test="password != null and password != ''">password,</if>
            <if test="salt != null">salt,</if>
            <if test="email != null">email,</if>
            <if test="phonenumber != null">phonenumber,</if>
            <if test="status != null">status,</if>
            <if test="avator != null">avator,</if>
            <if test="sex != null">sex,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="remark != null">remark,</if>
            <if test="creatTime != null">creat_time,</if>
            <if test="creatBy != null">creat_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="clientName != null">#{clientName},</if>
            <if test="loginName != null and loginName != ''">#{loginName},</if>
            <if test="password != null and password != ''">#{password},</if>
            <if test="salt != null">#{salt},</if>
            <if test="email != null">#{email},</if>
            <if test="phonenumber != null">#{phonenumber},</if>
            <if test="status != null">#{status},</if>
            <if test="avator != null">#{avator},</if>
            <if test="sex != null">#{sex},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="remark != null">#{remark},</if>
            <if test="creatTime != null">#{creatTime},</if>
            <if test="creatBy != null">#{creatBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
         </trim>
    </insert>

    <update id="updateClient" parameterType="Client">
        update client
        <trim prefix="SET" suffixOverrides=",">
            <if test="clientName != null">client_name = #{clientName},</if>
            <if test="loginName != null and loginName != ''">login_name = #{loginName},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="salt != null">salt = #{salt},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phonenumber != null">phonenumber = #{phonenumber},</if>
            <if test="status != null">status = #{status},</if>
            <if test="avator != null">avator = #{avator},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="creatTime != null">creat_time = #{creatTime},</if>
            <if test="creatBy != null">creat_by = #{creatBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </trim>
        where client_id = #{clientId}
    </update>

    <delete id="deleteClientById" parameterType="Long">
        delete from client where client_id = #{clientId}
    </delete>

    <delete id="deleteClientByIds" parameterType="String">
        delete from client where client_id in 
        <foreach item="clientId" collection="array" open="(" separator="," close=")">
            #{clientId}
        </foreach>
    </delete>
    
    <delete id="deleteClientLogByClientIds" parameterType="String">
        delete from client_log where client_id in 
        <foreach item="clientId" collection="array" open="(" separator="," close=")">
            #{clientId}
        </foreach>
    </delete>

    <delete id="deleteClientLogByClientId" parameterType="Long">
        delete from client_log where client_id = #{clientId}
    </delete>

    <insert id="batchClientLog">
        insert into client_log( cl_id, client_id, tp_id, flag, device, local_iter, model_evaluate, start_time, end_time) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.clId}, #{item.clientId}, #{item.tpId}, #{item.flag}, #{item.device}, #{item.localIter}, #{item.modelEvaluate}, #{item.startTime}, #{item.endTime})
        </foreach>
    </insert>

</mapper>